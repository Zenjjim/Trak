datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

//  ▄▄       ▄▄  ▄▄▄▄▄▄▄▄▄▄▄  ▄▄▄▄▄▄▄▄▄▄   ▄▄▄▄▄▄▄▄▄▄▄  ▄
// ▐░░▌     ▐░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌ ▐░░░░░░░░░░░▌▐░▌
// ▐░▌░▌   ▐░▐░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌
// ▐░▌▐░▌ ▐░▌▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░▌          ▐░▌
// ▐░▌ ▐░▐░▌ ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░▌
// ▐░▌  ▐░▌  ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░▌
// ▐░▌   ▀   ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░█▀▀▀▀▀▀▀▀▀ ▐░▌
// ▐░▌       ▐░▌▐░▌       ▐░▌▐░▌       ▐░▌▐░▌          ▐░▌
// ▐░▌       ▐░▌▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄▄▄ ▐░█▄▄▄▄▄▄▄▄▄
// ▐░▌       ▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌ ▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌
//  ▀         ▀  ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀   ▀▀▀▀▀▀▀▀▀▀▀  ▀▀▀▀▀▀▀▀▀▀▀

model Phase {
  id    String @id @default(uuid())
  title String

  order Int

  tasks Task[]

  processTemplate   ProcessTemplate @relation(fields: [processTemplateId], references: [id])
  processTemplateId String
}

model ProcessTemplate {
  id    String @id @default(uuid())
  title String
  slug  String @unique

  phases Phase[]
}

model Profession {
  id    String @id @default(uuid())
  title String

  tasks    Task[]
  employee Employee[]
}

model Tag {
  id    String @id @default(uuid())
  title String

  tasks Task[]
}

model Task {
  id          String  @id @default(uuid())
  title       String
  description String
  global      Boolean @default(true)

  phase   Phase  @relation(fields: [phaseId], references: [id])
  phaseId String

  professions  Profession[]
  tags         Tag[]
  employeeTask EmployeeTask[]
}

model Employee {
  id               Int            @id @default(autoincrement())
  firstName        String
  lastName         String
  title            String?
  email            String
  birthDate        DateTime
  dateOfEmployment DateTime?
  terminationDate  DateTime?
  imageUrl         String?
  slack            String?
  professionId     String
  profession       Profession     @relation(fields: [professionId], references: [id])
  hrManagerId      Int?
  hrManager        Employee?      @relation(fields: [hrManagerId], references: [id])
  employees        Employee[]     @relation("EmployeeToEmployee")
  employeeTask     EmployeeTask[] @relation("tasks")
  responsible      EmployeeTask[] @relation("responsible_tasks")
}

model EmployeeTask {
  id            String    @id @default(uuid())
  task          Task?     @relation(fields: [taskId], references: [id])
  taskId        String?
  employee      Employee? @relation("tasks", fields: [employeeId], references: [id])
  completed     Boolean   @default(false)
  responsible   Employee? @relation("responsible_tasks", fields: [responsibleId], references: [id])
  employeeId    Int?
  responsibleId Int?
  year          DateTime
}
